// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WembleyScada.Infrastructure;

#nullable disable

namespace WembleyScada.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LineProduct", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsableLinesLineId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductId", "UsableLinesLineId");

                    b.HasIndex("UsableLinesLineId");

                    b.ToTable("LineProduct");
                });

            modelBuilder.Entity("LineReference", b =>
                {
                    b.Property<string>("ReferenceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsableLinesLineId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReferenceId", "UsableLinesLineId");

                    b.HasIndex("UsableLinesLineId");

                    b.ToTable("LineReference");
                });

            modelBuilder.Entity("ProductStation", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StationsStationId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductId", "StationsStationId");

                    b.HasIndex("StationsStationId");

                    b.ToTable("ProductStation");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.EmployeeAggregate.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.EmployeeAggregate.WorkRecord", b =>
                {
                    b.Property<string>("WorkRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("WorkRecordId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StationId");

                    b.ToTable("WorkRecord");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ErrorInformationAggregate.ErrorInformation", b =>
                {
                    b.Property<string>("ErrorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ErrorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ErrorId");

                    b.HasIndex("StationId");

                    b.ToTable("ErrorInformations");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ErrorInformationAggregate.ErrorStatus", b =>
                {
                    b.Property<string>("ErrorStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ShiftNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ErrorStatusId");

                    b.HasIndex("ErrorId");

                    b.ToTable("ErrorStatus");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.LineAggregate.Line", b =>
                {
                    b.Property<string>("LineId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineType")
                        .HasColumnType("int");

                    b.HasKey("LineId");

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.MachineStatusAggregate.MachineStatus", b =>
                {
                    b.Property<string>("MachineStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftNumber")
                        .HasColumnType("int");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("MachineStatusId");

                    b.HasIndex("StationId");

                    b.ToTable("MachineStatus");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ProductAggregate.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ReferenceAggregate.Lot", b =>
                {
                    b.Property<string>("LotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LotCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LotSize")
                        .HasColumnType("int");

                    b.Property<int>("LotStatus")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("LotId");

                    b.HasIndex("LotCode")
                        .IsUnique();

                    b.HasIndex("ReferenceId");

                    b.ToTable("Lot");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ReferenceAggregate.Reference", b =>
                {
                    b.Property<string>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReferenceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReferenceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReferenceName")
                        .IsUnique();

                    b.ToTable("References");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ShiftReportAggregate.ShiftReport", b =>
                {
                    b.Property<string>("ShiftReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<double>("A")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DefectCount")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ElapsedTime")
                        .HasColumnType("time");

                    b.Property<double>("P")
                        .HasColumnType("float");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<int>("ShiftNumber")
                        .HasColumnType("int");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StationId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ShiftReportId");

                    b.HasIndex("StationId");

                    b.HasIndex("StationId1");

                    b.ToTable("ShiftReports");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.StationAggregate.Station", b =>
                {
                    b.Property<string>("StationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LineId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StationId");

                    b.HasIndex("LineId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.StationReferenceAggregate.MFC", b =>
                {
                    b.Property<string>("MFCId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MFCName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("MFCId");

                    b.HasIndex("ReferenceId", "StationId");

                    b.ToTable("MFC");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.StationReferenceAggregate.StationReference", b =>
                {
                    b.Property<string>("ReferenceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StationId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReferenceId", "StationId");

                    b.HasIndex("StationId");

                    b.ToTable("StationReferences");
                });

            modelBuilder.Entity("LineProduct", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.ProductAggregate.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyScada.Domain.AggregateModels.LineAggregate.Line", null)
                        .WithMany()
                        .HasForeignKey("UsableLinesLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LineReference", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.ReferenceAggregate.Reference", null)
                        .WithMany()
                        .HasForeignKey("ReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyScada.Domain.AggregateModels.LineAggregate.Line", null)
                        .WithMany()
                        .HasForeignKey("UsableLinesLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductStation", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.ProductAggregate.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyScada.Domain.AggregateModels.StationAggregate.Station", null)
                        .WithMany()
                        .HasForeignKey("StationsStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.EmployeeAggregate.WorkRecord", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.EmployeeAggregate.Employee", "Employee")
                        .WithMany("WorkRecords")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyScada.Domain.AggregateModels.StationAggregate.Station", "Station")
                        .WithMany("EmployeeWorkRecords")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ErrorInformationAggregate.ErrorInformation", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.StationAggregate.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ErrorInformationAggregate.ErrorStatus", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.ErrorInformationAggregate.ErrorInformation", "ErrorInformation")
                        .WithMany("ErrorStatuses")
                        .HasForeignKey("ErrorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ErrorInformation");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.MachineStatusAggregate.MachineStatus", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.StationAggregate.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ReferenceAggregate.Lot", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.ReferenceAggregate.Reference", null)
                        .WithMany("Lots")
                        .HasForeignKey("ReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ReferenceAggregate.Reference", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.ProductAggregate.Product", "Product")
                        .WithMany("References")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ShiftReportAggregate.ShiftReport", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.StationAggregate.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyScada.Domain.AggregateModels.StationAggregate.Station", null)
                        .WithMany("ShiftReports")
                        .HasForeignKey("StationId1");

                    b.OwnsMany("WembleyScada.Domain.AggregateModels.ShiftReportAggregate.Shot", "Shots", b1 =>
                        {
                            b1.Property<string>("ShiftReportId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<double>("A")
                                .HasColumnType("float");

                            b1.Property<double>("CycleTime")
                                .HasColumnType("float");

                            b1.Property<double>("OEE")
                                .HasColumnType("float");

                            b1.Property<double>("P")
                                .HasColumnType("float");

                            b1.Property<double>("Q")
                                .HasColumnType("float");

                            b1.Property<DateTime>("TimeStamp")
                                .HasColumnType("datetime2");

                            b1.HasKey("ShiftReportId", "Id");

                            b1.ToTable("Shot");

                            b1.WithOwner()
                                .HasForeignKey("ShiftReportId");
                        });

                    b.Navigation("Shots");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.StationAggregate.Station", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.LineAggregate.Line", "Line")
                        .WithMany("Stations")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.StationReferenceAggregate.MFC", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.StationReferenceAggregate.StationReference", null)
                        .WithMany("MFCs")
                        .HasForeignKey("ReferenceId", "StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.StationReferenceAggregate.StationReference", b =>
                {
                    b.HasOne("WembleyScada.Domain.AggregateModels.ReferenceAggregate.Reference", "Reference")
                        .WithMany()
                        .HasForeignKey("ReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WembleyScada.Domain.AggregateModels.StationAggregate.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reference");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.EmployeeAggregate.Employee", b =>
                {
                    b.Navigation("WorkRecords");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ErrorInformationAggregate.ErrorInformation", b =>
                {
                    b.Navigation("ErrorStatuses");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.LineAggregate.Line", b =>
                {
                    b.Navigation("Stations");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ProductAggregate.Product", b =>
                {
                    b.Navigation("References");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.ReferenceAggregate.Reference", b =>
                {
                    b.Navigation("Lots");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.StationAggregate.Station", b =>
                {
                    b.Navigation("EmployeeWorkRecords");

                    b.Navigation("ShiftReports");
                });

            modelBuilder.Entity("WembleyScada.Domain.AggregateModels.StationReferenceAggregate.StationReference", b =>
                {
                    b.Navigation("MFCs");
                });
#pragma warning restore 612, 618
        }
    }
}
